library('ISLR')
names(Smarket)
summary(Smarket)
pairs(Smarket,col=Smarket$Direction)
?glm
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family = binomial)
summary(glm.fit)
glm.probs = predict(glm.fit,type = "responses")
glm.probs = predict(glm.fit,type = "response")
glm.probs[1:5]
table(glm.pred,Direction)
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family = binomial)
summary(glm.fit)
glm.probs = predict(glm.fit,type = "response")
glm.probs[1:5]
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
attach(Smarket)
table(glm.pred,Direction)
mean(glm.pred==Direction)
library('caret)
library('caret')
library('caret')
train_index <- createDataPartition(y = Direction,p = 0.7)
train_index <- createDataPartition(y = Direction,p = 0.7,list = FALSE)
train_index <- createDataPartition(y = Direction,p = 0.7,list = FALSE)
Smarket_train <- Smarket[train.index,]
train_index <- createDataPartition(y = Direction,p = 0.7,list = FALSE)
Smarket_train <- Smarket[train_index,]
Smarket_test <- Smarket[-train_index,]
View(Smarket_train)
View(Smarket)
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket_train,family = binomial)
train_index <- createDataPartition(y = Direction,p = 0.7,list = FALSE)
Smarket_train <- Smarket[train_index,]
Smarket_test <- Smarket[-train_index,]
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket_train,family = binomial)
glm.probs = predict(glm.fit,newdata = Smarket_test,type = "response")
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
table(glm.pred,Smarket_test$Direction)
mean(glm.pred==Smarket_test$Direction)
glm.fit = glm(Direction~Lag1+Lag2,data=Smarket_train,family = binomial)
glm.probs = predict(glm.fit,newdata = Smarket_test,type = "response")
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
table(glm.pred,Smarket_test$Direction)
mean(glm.pred==Smarket_test$Direction)
glm.fit = glm(Direction~Lag1+Lag2,data=Smarket_train,family = binomial)
glm.probs = predict(glm.fit,newdata = Smarket_test,type = "response")
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
table(glm.pred,Smarket_test$Direction)
mean(glm.pred==Smarket_test$Direction)
library('ISLR')
library('caret')
names(Smarket)
summary(Smarket)
pairs(Smarket,col=Smarket$Direction)
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family = binomial)
summary(glm.fit)
glm.probs = predict(glm.fit,type = "response")
glm.probs[1:5]
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
attach(Smarket)
table(glm.pred,Direction)
mean(glm.pred==Direction)
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family = binomial,subset = Year < 2005)
glm.probs = predict(glm.fit,newdata = Smarket_test,type = "response")
Smarket.2005 = subset(Smarket,Year=2005)
glm.probs = predict(glm.fit,newdata = Smarket.2005,type = "response")
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
# train_index <- createDataPartition(y = Direction,p = 0.7,list = FALSE)
# Smarket_train <- Smarket[train_index,]
# Smarket_test <- Smarket[-train_index,]
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family = binomial,subset = Year < 2005)
Smarket.2005 = subset(Smarket,Year=2005)
glm.probs = predict(glm.fit,newdata = Smarket.2005,type = "response")
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
table(glm.pred,Smarket.2005$Direction)
mean(glm.pred==Smarket.2005$Direction)
glm.fit = glm(Direction~Lag1+Lag2,data=Smarket,family = binomial,subset = Year < 2005)
glm.probs = predict(glm.fit,newdata = Smarket.2005,type = "response")
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
table(glm.pred,Smarket.2005$Direction)
mean(glm.pred==Smarket.2005$Direction)
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume,data=Smarket,family = binomial,subset = Year < 2005)
Smarket.2005 = subset(Smarket,Year==2005)
glm.probs = predict(glm.fit,newdata = Smarket.2005,type = "response")
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
table(glm.pred,Smarket.2005$Direction)
mean(glm.pred==Smarket.2005$Direction)
glm.fit = glm(Direction~Lag1+Lag2,data=Smarket,family = binomial,subset = Year < 2005)
glm.probs = predict(glm.fit,newdata = Smarket.2005,type = "response")
glm.pred = ifelse(glm.probs>0.5,"Up","Down")
table(glm.pred,Smarket.2005$Direction)
mean(glm.pred==Smarket.2005$Direction)
lda.fit=lda(Direction=Lag1+Lag2,data=Smarket,subset=Year < 2005)
library('ISLR')
library('MASS')
library('caret')
library('ISLR')
library('MASS')
library('caret')
lda.fit=lda(Direction=Lag1+Lag2,data=Smarket,subset=Year < 2005)
lda.fit=lda(Direction=Lag1+Lag2,data=Smarket,subset= Year<2005)
lda.fit=lda(Direction=Lag1+Lag2,data=Smarket, subset= Year<2005)
library('ISLR')
library('MASS')
library('caret')
lda.fit=lda(Direction=Lag1+Lag2,data=Smarket, subset= Year<2005)
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket, subset= Year<2005)
lda.fit
plot(lda.fit)
Smarket.2005 = subset(Smarket,Year==2005)
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket, subset= Year<2005)
lda.fit
plot(lda.fit)
lda.pred[1:5,]
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket, subset= Year<2005)
lda.fit
plot(lda.fit)
Smarket.2005 = subset(Smarket,Year==2005)
lda.pred = predict(lda.fit,Smarket.2005)
lda.pred[1:5,]
lda.pred[1:5]
data.frame(lda.pred)[1:5,]
table(lda.pred$class,Smarket.2005$Direction)
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket, subset= Year<2005)
lda.fit
plot(lda.fit)
Smarket.2005 = subset(Smarket,Year==2005)
lda.pred = predict(lda.fit,Smarket.2005)
data.frame(lda.pred)[1:5,]
table(lda.pred$class,Smarket.2005$Direction)
mean(lda.pred$class==Smarket.2005$Direction)
library('ISLR')
library('MASS')
library('caret')
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket, subset= Year<2005)
lda.fit
plot(lda.fit)
Smarket.2005 = subset(Smarket,Year==2005)
lda.pred = predict(lda.fit,Smarket.2005)
data.frame(lda.pred)[1:5,]
table(lda.pred$class,Smarket.2005$Direction)
mean(lda.pred$class==Smarket.2005$Direction)
library(class)
cbind(Lag1,Lag2)
cbind(Lag1,Lag2)
?knn
library(class)
?knn
attach(Smarket)
Xlag = cbind(Lag1,Lag2)
train = Year < 2005
knn.pred = knn(Xlag[train,],Xlag[!train,],Direction[train],k=1)
table(knn.pred,Direction[!train])
mean(knn.pred==Direction[!train])
library(class)
?knn
attach(Smarket)
library(class)
library('ISLR')
?knn
library(class)
library('ISLR')
?knn
attach(Smarket)
Xlag = cbind(Lag1,Lag2)
train = Year < 2005
knn.pred = knn(Xlag[train,],Xlag[!train,],Direction[train],k=1)
table(knn.pred,Direction[!train])
mean(knn.pred==Direction[!train])
